- name: Lets Encrypt
  hosts: wyse01.tailnet-ba52.ts.net
  gather_facts: false
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
  vars:
    main_user: core
  tasks:
      
    - name: Lets Encrypt | Renew
      ansible.builtin.shell: |
        set -euo pipefail
        
        export lego_version="latest"
        export email="{{ lets_encrypt_email }}"
        export cf_dns_api_token="{{ cf_dns_api_token }}"
        export cf_polling_interval="30"
        export cf_propagation_timeout="130"
        export cf_ttl="120"
        export domains="{{ lets_encrypt_domains }}"
        export lets_encrypt_path="{{ lets_encrypt_path }}"
        export dns_servers="1.1.1.1:53,1.0.0.1:53"
        
        function renew() {
          read -ra domain_array <<< "$domains"
        
          for domain in "${domain_array[@]}"; do
            echo "------ $domain -------" >&2
            podman run --rm \
              --name=letsencrypt \
              --volume="$lets_encrypt_path/.lego:/.lego:z" \
              --env=CF_DNS_API_TOKEN="$cf_dns_api_token" \
              --env=CLOUDFLARE_POLLING_INTERVAL="$cf_polling_interval" \
              --env=CLOUDFLARE_PROPAGATION_TIMEOUT="$cf_propagation_timeout" \
              --env=CLOUDFLARE_TTL="$cf_ttl" \
              docker.io/goacme/lego:"$lego_version" \
                --accept-tos \
                --dns.resolvers="$dns_servers" \
                --email="$email" \
                --dns=cloudflare \
                --domains="$domain" \
                --domains="*.$domain" \
                renew --no-random-sleep
          done
        }
        
        renew
      register: lets_encrypt_renew_output
      changed_when: "'Server responded with a certificate.' in lets_encrypt_renew_output.stderr"
      
    - name: Lets Encrypt | Caddy setup certs
      ansible.builtin.shell: |
        set -euo pipefail
        
        export domains="{{ lets_encrypt_domains }}"
        export lets_encrypt_path="{{ lets_encrypt_path }}"
        export caddy_path="{{ caddy_path }}"
        
        curl \
          --retry 10 \
          --retry-all-errors \
          --fail \
          --connect-timeout 5 \
          --max-time 10 \
          --retry-delay 10 \
          -u ":{{ ntfy_api_token }}" \
          -H "Title: Lets Encrypt | Caddy setup certs" \
          -H "Tags: lets-encrypt" \
          -d "Starting to copy Lets Encrypt certificates and restarting Caddy" \
          https://ntfy.kuba86.com/servers
        
        function copy_certs() {
          read -ra domain_array <<< "$domains"
        
          for domain in "${domain_array[@]}"; do
            echo "------ $domain -------"
            cp $lets_encrypt_path/.lego/certificates/$domain.crt $caddy_path/tls/live/$domain.crt
            cp $lets_encrypt_path/.lego/certificates/$domain.key $caddy_path/tls/live/$domain.key
          done
        }
        
        copy_certs
        
        echo "------ Restarting Caddy Server -------"
        podman exec caddy caddy reload --force --config /etc/caddy/Caddyfile
      register: lets_encrypt_copy_caddy_and_router_output
      when: >
        lets_encrypt_renew_output.changed | default(false)
