- name: Podman config setup
  hosts: coreos:dnf:desktop
  gather_facts: true
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/all.yaml"
  vars:
    main_user: core
  tasks:
    
    - name: Podman setup | check the system if unused (root)
      ansible.builtin.script: "../files/podman/check-if-unused.sh"
      args:
        executable: /usr/bin/bash
      register: check_if_unused_root
      become: true
      changed_when:
        - "'podman is unused, ok to reset' in check_if_unused_root.stdout"
      failed_when: check_if_unused_root.rc >= 1
      
    - name: Podman setup | check the system if unused ({{ main_user }})
      ansible.builtin.script: "../files/podman/check-if-unused.sh"
      args:
        executable: /usr/bin/bash
      register: check_if_unused_user
      become: false
      changed_when:
        - "'podman is unused, ok to reset' in check_if_unused_user.stdout"
      failed_when: check_if_unused_user.rc >= 1
      when:
        - '"container" not in ansible_facts["virtualization_tech_guest"]'
    
    - name: Podman setup | copy storage.conf
      ansible.builtin.copy:
        src: ../files/podman/storage.conf
        dest: /etc/containers/storage.conf
        owner: root
        group: root
        mode: '644'
      become: true
      register: copy_storage_conf
      when:
        - check_if_unused_root.changed | default(false)
        - check_if_unused_user.changed | default(false)
      
    - name: Podman setup | reset system (root)
      ansible.builtin.script: "../files/podman/reset-system.sh"
      args:
        executable: /usr/bin/bash
      register: reset_system_root
      become: true
      failed_when: reset_system_root.rc >= 1
      when:
        - check_if_unused_root.changed | default(false)
        - copy_storage_conf.changed | default(false)
    
    - name: Podman setup | reset system ({{ main_user }})
      ansible.builtin.script: "../files/podman/reset-system.sh"
      args:
        executable: /usr/bin/bash
      register: reset_system_user
      become: false
      failed_when: reset_system_user.rc >= 1
      when:
        - '"container" not in ansible_facts["virtualization_tech_guest"]'
        - check_if_unused_user.changed | default(false)
        - copy_storage_conf.changed | default(false)
    
    - name: Podman setup | enable podman-auto-update.timer (root)
      systemd:
        name: podman-auto-update.timer
        enabled: yes
        state: started
        scope: system
      become: true
    
    - name: Podman setup | enable podman-auto-update.timer ({{ main_user }})
      systemd:
        name: podman-auto-update.timer
        enabled: yes
        state: started
        scope: user
