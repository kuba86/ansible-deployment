- name: Install fish
  hosts: coreos:dnf:desktop
  gather_facts: true
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/all.yaml"
  vars:
    main_user: core
    ansible_shell_executable: /bin/sh
  tasks:
    
    - name: Fish | install fish shell
      block:

        - name: Fish | check if fish is installed
          ansible.builtin.shell: |
            set -euo pipefail
            IFS=$'\n\t'

            echo "running as $(ps -p $$ -o comm=)"
            
            which fish
          register: check_if_fish_is_installed
          changed_when: false
          failed_when: check_if_fish_is_installed.rc >= 2
          args:
            executable: /usr/bin/bash
    
        - name: Fish | install via rpm-ostree
          become: true
          ansible.builtin.shell: |
            rpm-ostree install \
            --idempotent \
            --unchanged-exit-77 \
            --assumeyes \
            fish
          args:
            executable: /usr/bin/bash
          register: install_rpm_ostree
          failed_when: >
            (install_rpm_ostree.rc == 1) or
            (install_rpm_ostree.rc == 2) or
            (install_rpm_ostree.rc == 3) or
            (install_rpm_ostree.rc == 4) or
            (install_rpm_ostree.rc == 78)
          changed_when: >
            install_rpm_ostree.rc != 77
          when: >
            ansible_pkg_mgr in ['atomic_container'] and
            check_if_fish_is_installed.rc == 1
    
        - name: Fish | install via dnf
          become: true
          ansible.builtin.dnf:
            name:
              - fish
            state: present
          when: >
            ansible_pkg_mgr in ['dnf', 'dnf5'] and
            check_if_fish_is_installed.rc == 1

    - name: Fish | Configure fish shell for user {{ main_user }}
      block:

        - name: Fish | ensures /home/{{ main_user }}/.bashrc.d/ directory exists
          ansible.builtin.file:
            path: /home/{{ main_user }}/.bashrc.d/
            state: directory
            owner: "{{ main_user }}"
            group: "{{ main_user }}"
            mode: '755'

        - name: Fish | fish.bashrc (autostart)
          ansible.builtin.copy:
            content: |
              if [[ $- == *i* ]]
              then
                if [[ $(ps --no-header --pid=$PPID --format=cmd) != "fish" ]]
                then
                  which fish > /dev/null # && exec fish
                fi
              fi
            dest: /home/{{ main_user }}/.bashrc.d/fish.bashrc
            owner: "{{ main_user }}"
            group: "{{ main_user }}"
            mode: '644'

        - name: Fish | ensures /home/{{ main_user }}/.config/fish/conf.d/ directory exists
          ansible.builtin.file:
            path: /home/{{ main_user }}/.config/fish/conf.d/
            state: directory
            owner: "{{ main_user }}"
            group: "{{ main_user }}"
            mode: '755'

        - name: Fish | set theme (ayu Dark)
          ansible.builtin.copy:
            content: |
              if status is-interactive
                fish_config theme choose "ayu Dark"
              end
            dest: /home/{{ main_user }}/.config/fish/conf.d/theme.fish
            owner: "{{ main_user }}"
            group: "{{ main_user }}"
            mode: '644'

        - name: Fish | rsync functions
          ansible.posix.synchronize:
            src: "../files/functions/"
            dest: "/home/{{ main_user }}/.config/fish/functions/"
            delete: yes
