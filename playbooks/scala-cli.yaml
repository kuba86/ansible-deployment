- name: Install Scala CLI
  hosts: coreos:dnf:desktop
  gather_facts: false
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
  vars:
    main_user: core
  tasks:

    - name: Scala CLI | Install
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        if [ -f "$HOME/.profile" ]; then
          echo ".profile exists"
          source ~/.profile
        else
          echo ".profile does not exist"
        fi
        
        if command -v scala-cli &> /dev/null
        then
          echo "scala-cli is installed and available in PATH"
          echo "scala-cli will be updated to newest version"
          #scala-cli update --force
        else
          echo "scala-cli is not installed or not in PATH"
          curl -sSLf https://scala-cli.virtuslab.org/get | sh
        fi
      register: install_scalacli_output
      changed_when: "'scala-cli is not installed or not in PATH' in install_scalacli_output.stdout"
      become_user: "{{ main_user }}"

    - name: Scala CLI | Validate installation
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        if [ -f "$HOME/.profile" ]; then
          echo ".profile exists"
          source ~/.profile
        else
          echo ".profile does not exist"
        fi
        
        scala-cli version
      register: scala_cli_version
      failed_when: scala_cli_version.rc != 0
      changed_when: false
      become_user: "{{ main_user }}"

    - name: Scala CLI | setup power mode to true
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        if [ -f "$HOME/.profile" ]; then
          echo ".profile exists"
          source ~/.profile
        else
          echo ".profile does not exist"
        fi
        
        scala_cli_power_mode=$(scala-cli config power)
        
        if [[ "$scala_cli_power_mode" == "true" ]]; then
          echo "Scala-Cli power mode was already set correctly"
        else
          echo "Scala-Cli power mode set to FALSE, changing to TRUE"
          scala-cli config power true
        fi
      register: scala_cli_power_mode
      failed_when: scala_cli_power_mode.rc != 0
      changed_when: "'Scala-Cli power mode set to FALSE, changing to TRUE' in scala_cli_power_mode.stdout"
      become_user: "{{ main_user }}"
      
    - name: Scala CLI | install coursier
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        if [ ! -f /home/{{ main_user }}/bin/cs ]; then
          echo "Installing coursier..."
          mkdir -p /home/{{ main_user }}/bin
          chown {{ main_user }}:{{ main_user }} /home/{{ main_user }}/bin
          curl -fL "https://github.com/coursier/launchers/raw/master/cs-$(uname -m)-pc-linux.gz" | gzip -d > /home/{{ main_user }}/bin/cs && chmod u+x /home/{{ main_user }}/bin/cs
          chown {{ main_user }}:{{ main_user }} /home/{{ main_user }}/bin/cs
        else
          echo "/home/{{ main_user }}/bin/cs already exists."
        fi
      register: scala_cli_install_coursier
      failed_when: scala_cli_install_coursier.rc != 0
      changed_when: "'Installing coursier...' in scala_cli_install_coursier.stdout"
      become_user: "{{ main_user }}"
      
    - name: Scala CLI | Validate coursier installation
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        if [ -f "$HOME/.profile" ]; then
          echo ".profile exists"
          source ~/.profile
        else
          echo ".profile does not exist"
        fi

        cs version
      register: cs_version
      failed_when: cs_version.rc != 0
      changed_when: false
      become_user: "{{ main_user }}"
      
    - name: Scala CLI | setup JDK env vars
      ansible.builtin.copy:
        src: ../templates/jvm.bashrc
        dest: /home/{{ main_user }}/.bashrc.d/jvm.bashrc
        owner: "{{ main_user }}"
        group: "{{ main_user }}"
        mode: '644'
      
    - name: Scala CLI | Display Scala CLI version
      ansible.builtin.debug:
        msg: "Installed Scala CLI version: {{ scala_cli_version.stdout }}"
        
    - name: Scala CLI | Display coursier version
      ansible.builtin.debug:
        msg: "Installed coursier version: {{ cs_version.stdout }}"
