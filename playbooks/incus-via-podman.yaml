- name: Install incus
  hosts: coreos
  gather_facts: true
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/all.yaml"
  vars:
    main_user: core
  tasks:
    - name: Incus | Install and setup
      become: true
      when:
        - '"container" not in ansible_facts["virtualization_tech_guest"]'
      block:
# cleanup
# sudo systemctl stop incus.service
# sudo btrfs property set /var/lib/incus/storage-pools/*/images/* ro false
# sudo rm -rf /var/lib/incus /var/lib/lxc /var/lib/lxcfs /var/lib/lxd
# sudo ip link delete incusbr0 type bridge
#
        - name: Incus | create directory for incus storage
          ansible.builtin.file:
            path: /var/lib/incus
            state: directory
            owner: root
            group: root
            mode: '0755'
          
        - name: Incus | install incus.container (root)
          ansible.builtin.copy:
            src: "../files/incus/incus.container"
            dest: "/etc/containers/systemd/incus.container"
            owner: "root"
            group: "root"
            mode: '644'
          become: true
          register: incus_container_service

        - name: Incus | reload Systemd daemon for 'root'
          become: true
          ansible.builtin.command: systemctl daemon-reload
          when: >
            incus_container_service.changed | default(false)
          changed_when: >
            false
            
        - name: Incus | restart incus.service if changed
          ansible.builtin.systemd_service:
            name: incus.service
            state: started
          when: >
            incus_container_service.changed | default(false)
            
        - name: Incus | start incus.service
          ansible.builtin.systemd_service:
            name: incus.service
            state: started
            
        - name: Incus | install incus binary and add to path
          become: true
          ansible.builtin.shell: |
            set -euo pipefail
            IFS=$'\n\t'
            
            incus_version="6.15.0"
            global_bin_path="/usr/local/bin"
            incus_bin_path="$global_bin_path/incus"
            incus_agent_bin_path="$global_bin_path/incus-agent"
            incus_url="https://github.com/lxc/incus/releases/download/v$incus_version/bin.linux.incus.$(uname -m)"
            incus_agent_url="https://github.com/lxc/incus/releases/download/v$incus_version/bin.linux.incus-agent.$(uname -m)"
            
            needs_install=false
            
            if [ ! -f $incus_bin_path ]; then
              echo "incus not found, will install..."
              needs_install=true
            else
              # Check if the installed version matches the desired version
              if $incus_bin_path --version | grep -q "${incus_version%.*}"; then
                echo "incus $incus_version is already installed."
              else
                echo "incus is installed, but the version doesn't match $incus_version, will reinstall..."
                needs_install=true
              fi
            fi
            
            if [ "$needs_install" = true ]; then
              echo "Installing incus..."
              curl -fL $incus_url > $incus_bin_path
              curl -fL $incus_agent_url > $incus_agent_bin_path
              chmod +x $incus_bin_path
              chmod +x $incus_agent_bin_path
            fi
          args:
            executable: /usr/bin/bash
          register: install_incus
          failed_when: install_incus.rc != 0
          changed_when: "'Installing incus...' in install_incus.stdout"
          when:
            - ansible_pkg_mgr in ['atomic_container', 'dnf', 'dnf5']
          
        - name: Incus | init
          ansible.builtin.shell: |
            set -euo pipefail
            IFS=$'\n\t'
            
            if [[ -z "${TAILSCALE_IP:-}" ]]; then
              echo "Error: TAILSCALE_IP environment variable is not set" >&2
              exit 1
            fi
            incus admin init \
              --auto \
              --network-address=$TAILSCALE_IP \
              --network-port=13512
          args:
            executable: /usr/bin/bash
          become: true
          register: incus_init
          changed_when: incus_init.rc != 0
          
        - name: Incus | add trust certificate
          become: true
          block:
            - name: Incus | Copy incus-ui.crt
              ansible.builtin.copy:
                src: "../files/incus/incus-ui.crt"
                dest: "/root/incus-ui.crt"
                owner: root
                group: root
                mode: '0600'
            
            - name: Incus | Import incus-ui.crt trust certificate
              ansible.builtin.shell: |
                incus config trust add-certificate /root/incus-ui.crt
              register: incus_add_certificate_result
              changed_when: "'Certificate added' in incus_add_certificate_result.stdout"
              failed_when: >
                "Error: Certificate already in trust store" not in incus_add_certificate_result.stderr and
                incus_add_certificate_result.rc != 0
            
            - name: Incus | Remove incus-ui.crt file
              ansible.builtin.file:
                path: "/root/incus-ui.crt"
                state: absent
