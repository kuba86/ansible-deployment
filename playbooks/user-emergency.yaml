- name: Setup 'emergency' user
  hosts: coreos:dnf:desktop:!wyse02.tailnet-ba52.ts.net:!wyse03.tailnet-ba52.ts.net
  gather_facts: true
  become: true
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/all.yaml"
  vars:
    core_user_pass_hash:
  tasks:

    - name: Emergency user | Add and setup user 'emergency'
      become: true
      ansible.builtin.user:
        name: emergency
        create_home: true
        # time mkpasswd --method=yescrypt --rounds 11 dummy_password
        # using 'core' as the password should be the same
        password: "{{ core_user_pass_hash }}"
        shell: /usr/bin/fish
        state: present
    
    - name: Emergency user | Create authorized_keys.d directory
      ansible.builtin.file:
        path: /home/emergency/.ssh/authorized_keys.d
        state: directory
        mode: '700'
        owner: "emergency"
        group: "emergency"
    
    - name: Emergency user | Update authorized keys
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        authorized_keys_dir=/home/emergency/.ssh/authorized_keys.d
        authorized_keys_file=$authorized_keys_dir/ansible
        
        if [[ -f "$authorized_keys_file" ]]; then
          echo "$authorized_keys_file EXISTS"
        
          if cmp -s "$authorized_keys_file" <(curl -sSLf https://kuba86.com/ssh.txt); then
            echo "The files are identical."
          else
            echo "The files are different. Updating..."
            curl -sSLf https://kuba86.com/ssh.txt > "$authorized_keys_file"
          fi
        
        else
          echo "$authorized_keys_file DOES NOT EXISTS. Updating..."
          curl -sSLf https://kuba86.com/ssh.txt > "$authorized_keys_file"
          chmod 600 "$authorized_keys_file"
        fi
      args:
        executable: /usr/bin/bash
      register: ssh_update_output
      changed_when: "'Updating...' in ssh_update_output.stdout"
      become_user: "emergency"
    
    - name: Emergency user | Setup sshd config
      become: true
      ansible.builtin.copy:
        content: |
          PasswordAuthentication no
          AllowUsers core user root emergency
          AuthorizedKeysFile .ssh/authorized_keys.d/ansible
        dest: /etc/ssh/sshd_config.d/60-common.conf
        owner: root
        group: root
        mode: '600'
        
    - name: Emergency user | restart sshd.service
      ansible.builtin.systemd_service:
        name: sshd.service
        state: restarted
