- name: Install packages
  hosts: coreos:dnf:desktop
  gather_facts: true
  vars_files:
    - "../inventories/prod/host_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/{{ inventory_hostname }}.yaml"
    - "../inventories/prod/secret_vars/all.yaml"
  tasks:

    - name: Install packages | add Terra repository (disabled for now)
      become: true
      ansible.builtin.copy:
        content: |
          [terra]
          name=Terra $releasever
          #baseurl=https://repos.fyralabs.com/terra$releasever
          metalink=https://tetsudou.fyralabs.com/metalink?repo=terra$releasever&arch=$basearch
          metadata_expire=6h
          type=rpm
          gpgcheck=1
          gpgkey=https://repos.fyralabs.com/terra$releasever/key.asc
          repo_gpgcheck=1
          enabled=0
          enabled_metadata=0
          countme=1

          [terra-source]
          name=Terra $releasever - Source
          #baseurl=https://repos.fyralabs.com/terra$releasever-source
          metalink=https://tetsudou.fyralabs.com/metalink?repo=terra$releasever-source&arch=$basearch
          metadata_expire=6h
          type=rpm
          gpgcheck=1
          gpgkey=https://repos.fyralabs.com/terra$releasever-source/key.asc
          repo_gpgcheck=1
          enabled=0
          enabled_metadata=0
        dest: /etc/yum.repos.d/terra.repo
        owner: root
        group: root
        mode: '644'
      when:
        - ansible_pkg_mgr in ['atomic_container', 'dnf', 'dnf5']

    - name: Install packages | rpm-ostree install
      become: true
      ansible.builtin.shell: |
        rpm-ostree install \
        --idempotent \
        --allow-inactive \
        --unchanged-exit-77 \
        --assumeyes \
          bat \
          btop \
          fd-find \
          iftop \
          mkpasswd \
          ncdu \
          sysstat \
          upower \
          wget \
          unzip \
          nodejs \
          binutils
      args:
        executable: /usr/bin/bash
      register: install_rpm_ostree
      failed_when: >
        (install_rpm_ostree.rc == 1) or
        (install_rpm_ostree.rc == 2) or
        (install_rpm_ostree.rc == 3) or
        (install_rpm_ostree.rc == 4) or
        (install_rpm_ostree.rc == 78)
      changed_when: >
        install_rpm_ostree.rc != 77
      when:
        - ansible_pkg_mgr in ['atomic_container']

    - name: Install packages | reboot server after rpm-ostree install
      become: true
      ansible.builtin.reboot:
      when:
        - ansible_pkg_mgr in ['atomic_container']
        - install_rpm_ostree.changed | default(false)

    - name: Install packages | update sudoers secure_path to include /usr/local/bin
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^Defaults\s+secure_path\s*=\s*/sbin:/bin:/usr/sbin:/usr/bin$'
        line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
        validate: 'visudo -cf %s'
      when:
        - ansible_pkg_mgr in ['dnf', 'dnf5']

    - name: Install packages | eza
      become: true
      ansible.builtin.shell: |
        set -euo pipefail
        IFS=$'\n\t'
        
        eza_version="0.23.0"
        global_bin_path="/usr/local/bin"
        eza_bin_path="$global_bin_path/eza"
        eza_url="https://github.com/eza-community/eza/releases/download/v$eza_version/eza_$(uname -m)-unknown-linux-gnu.zip"
        
        needs_install=false
        
        if [ ! -f $eza_bin_path ]; then
          echo "eza not found, will install..."
          needs_install=true
        else
          # Check if the installed version matches the desired version
          if $eza_bin_path --version | grep -q "$eza_version"; then
            echo "eza $eza_version is already installed."
          else
            echo "eza is installed, but the version doesn't match $eza_version, will reinstall..."
            needs_install=true
          fi
        fi
        
        if [ "$needs_install" = true ]; then
          echo "Installing eza..."
          curl -fL $eza_url | gzip -d > $eza_bin_path
          chmod +x $eza_bin_path
        fi
      args:
        executable: /usr/bin/bash
      register: install_eza
      failed_when: install_eza.rc != 0
      changed_when: "'Installing eza...' in install_eza.stdout"
      when:
        - ansible_pkg_mgr in ['atomic_container', 'dnf', 'dnf5']

    - name: Install epel-release | dnf
      become: true
      ansible.builtin.dnf:
        name:
          - epel-release
        state: present
      when:
        - ansible_pkg_mgr in ['dnf', 'dnf5']
        - "'el9' in group_names"
      register: install_epel_release
      failed_when: install_epel_release.rc >= 2

    - name: Install packages | dnf install
      become: true
      ansible.builtin.dnf:
        name:
          - bat
          - btop
          - fd-find
          - iftop
          - jq
          - mkpasswd
          - ncdu
          - sysstat
          - upower
          - wget
          - podman
          - unzip
          - nodejs
          - binutils
        state: present
      when:
        - ansible_pkg_mgr in ['dnf', 'dnf5']
